services:
  backend:
    build: ./backend
    container_name: honeynet-manager
    network_mode: "host"
    cap_add:
      - NET_RAW
      - NET_ADMIN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./backend/.env
    depends_on:
      - db

  frontend:
    build: ./frontend
    container_name: honeynet-frontend
    expose:
      - "3000"
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    networks:
      - honeynet-net

  nginx:
    image: nginx:alpine
    container_name: honeynet-proxy
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - frontend
    networks:
      - honeynet-net

  db:
    image: postgres:15
    container_name: honeynet-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - honeynet-net

volumes:
  pgdata:

networks:
  honeynet-net:
    driver: bridge

